<?xml version="1.0" encoding="utf-8"?>
<project name="alcina" basedir="." default="make-jars" xmlns:if="ant:if">
	<property file="local.ant.properties" />
	<property file="build.properties" />
	<fail unless="gwt.codestyle">
		...
		Please create a local.ant.properties file,
		template is local.ant.properties.template in this directory</fail>
	<import file="${alcina.home}/framework-paths.xml" />
	<!-- ensure there's something for ant task refs -->
	<mkdir dir="${framework.dist.dir}" />
	<mkdir dir="${extras.dist.dir}" />
	<mkdir dir="${extras.tasks.dist.dir}" />
	<target name="clean" description="Delete all generated files">
		<delete dir="${framework.entity.build.dir}" />
		<delete dir="${framework.servlet.build.dir}" />
		<delete dir="${framework.impl.jboss-hibernate.build.dir}" />
		<delete dir="${framework.dist.dir}" />
		<!--
		<delete dir="${extras.dist.dir}" />
		-->
		<delete dir="${extras.collections.build.dir}" />
		<delete dir="${extras.dev.build.dir}" />
		<delete dir="${framework.jvmclient.build.dir}" />
		<delete dir="${framework.clientreflectorjvm.build.dir}" />
		<delete dir="${framework.classmeta.build.dir}" />
		<mkdir dir="${framework.dist.dir}" />
	</target>
	<target name="compile" description="Compiles all J2SE modules">
		<mkdir dir="${framework.entity.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" srcdir="${framework.entity.src.dirs}" destdir="${framework.entity.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
			</classpath>

			<compilerarg value="${alcina.compiler.args}" />
		</javac>


		<mkdir dir="${extras.collections.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" srcdir="${extras.collections.src.dir}" destdir="${extras.collections.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>

		<mkdir dir="${extras.misc.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" destdir="${extras.misc.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<src path="${extras.misc.src.dir}" />
			<include name="cc/alcina/extras/misc/ie/client/**" />
			<include name="cc/alcina/extras/misc/ie/client/**" />
			<include name="cc/alcina/framework/extras/history/**" />
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${extras.cluster.tasks.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" destdir="${extras.cluster.tasks.build.dir}">
			<classpath>
				<path refid="extras.cluster.lib.path" />
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<src path="${extras.cluster.tasks.src.dir}" />
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${framework.jvmclient.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" destdir="${framework.jvmclient.build.dir}">
			<src path="${framework.jvmclient.src.dir}" />
			<exclude name="cc/alcina/framework/common/translatable/**" />
			<classpath>
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${framework.classmeta.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" destdir="${framework.classmeta.build.dir}">
			<src path="${framework.classmeta.src.dir}" />
			<exclude name="cc/alcina/framework/common/translatable/**" />
			<classpath>
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<!-- depends on classmeta -->
		<mkdir dir="${framework.servlet.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" srcdir="${framework.servlet.src.dirs}" destdir="${framework.servlet.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<path refid="framework.servlet.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
				<pathelement path="${framework.classmeta.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${framework.clientreflectorjvm.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" destdir="${framework.clientreflectorjvm.build.dir}">
			<src path="${framework.clientreflectorjvm.src.dir}" />
			<exclude name="cc/alcina/framework/common/translatable/**" />
			<classpath>
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.classmeta.build.dir}" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${extras.dev.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" srcdir="${extras.dev.src.dir}" destdir="${extras.dev.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<path refid="framework.servlet.lib.path" />
				<pathelement path="${framework.classmeta.build.dir}" />
				<pathelement path="${framework.entity.build.dir}" />
				<pathelement path="${framework.servlet.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${framework.impl.jboss-hibernate.build.dir}" />
		<javac target="8" source="8" includeantruntime="false" debug="on" srcdir="${framework.impl.jboss-hibernate.src.dirs}" destdir="${framework.impl.jboss-hibernate.build.dir}">
			<classpath>
				<pathelement path="${framework.classmeta.build.dir}" />
				<path refid="framework.common.lib.path" />
				<path refid="framework.impl.jboss-hibernate.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
	</target>
	<target name="check-cluster-tasks-jar">
		<available file="${extras.tasks.dist.dir}/${ant.project.name}-cluster-tasks.jar" property="cluster-tasks-jar.present" />
	</target>
	<target name="make-gwt-dev-jar" description="gwt-dev-overrid" depends="">
		<jar update="${alcina.update-jars}" destfile="${alcina.home}/dist-extras/gwt-dev-patch.jar">
			<fileset dir="${alcina.home}/extras/jsdom/build">
				<include name="**/JAbstractMethod.class" />
			</fileset>
		</jar>
	</target>
	<target name="make-gwittir-trunk-jar" description="make-gwittir-trunk-jar" depends="">
		<jar update="${alcina.update-jars}" destfile="${alcina.home}/dist-extras/gwittir-trunk-2.jar">
			<fileset dir="${alcina.home}/lib/framework/gwt/gwittir-trunk/">
				<include name="**/*.*" />
			</fileset>
		</jar>
	</target>
	<target name="make-ant-jar" description="Make the build support jar" depends="compile,check-cluster-tasks-jar" unless="cluster-tasks-jar.present">
		<mkdir dir="${extras.dist.dir}" />
		<mkdir dir="${extras.tasks.dist.dir}" />
		<jar update="${alcina.update-jars}" destfile="${extras.tasks.dist.dir}/${ant.project.name}-cluster-tasks.jar">
			<fileset dir="${extras.cluster.tasks.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${extras.cluster.tasks.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>
	</target>
	<target name="make-jars" description="Make entity, entity-impl, servlet and extras jars " depends="compile,make-ant-jar">
		<mkdir dir="${framework.dist.dir}" />
		<mkdir dir="${extras.dist.dir}" />
		<delete file="${framework.dist.dir}/${ant.project.name}-entity.jar" if:true="${alcina.delete-before-jars}" />
		<jar update="${alcina.update-jars}" destfile="${framework.dist.dir}/${ant.project.name}-entity.jar">
			<metainf dir="${framework.entity.base.dir}/META-INF" />
			<fileset dir="${framework.entity.build.dir}">
				<include name="**/*.*" />
				<!-- put in server (servlet/war) jar due to GWT/RPC classloader issues -->
				<exclude name="${framework.remote.interface.package}" />
			</fileset>

			<fileset dir="${framework.dir}/common/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${framework.dir}/gwt/src">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${framework.entity.base.dir}/src">
				<include name="**/*.java" />
				<include name="**/*.properties" />
			</fileset>
			<fileset dir="${framework.classmeta.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.classmeta.src.dir}">
				<include name="cc/**/*.*" />

				<include name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${framework.entity.build.dir}">
				<include name="${framework.remote.interface.package}" />
			</fileset>
			<!-- give the server handy access to stylesheets for print, static serving etc -->
			<fileset dir="${framework.gwt.src.dir}">
				<include name="**/*.css" />
			</fileset>
		</jar>

		<jar update="${alcina.update-jars}" destfile="${framework.dist.dir}/${ant.project.name}-extras-collections.jar">
			<fileset dir="${extras.collections.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${extras.collections.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>
		<jar update="${alcina.update-jars}" destfile="${framework.dist.dir}/${ant.project.name}-extras-dev.jar">
			<fileset dir="${extras.dev.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${extras.dev.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>
		<jar update="${alcina.update-jars}" destfile="${extras.dist.dir}/${ant.project.name}-extras-rpc-client.jar">
			<fileset dir="${extras.rpc.client.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>
		<jar update="${alcina.update-jars}" destfile="${extras.dist.dir}/${ant.project.name}-extras-misc.jar">
			<fileset dir="${extras.misc.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${extras.misc.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>

		<jar update="${alcina.update-jars}" destfile="${framework.dist.dir}/${ant.project.name}-jvmclient.jar">
			<metainf dir="${framework.jvmclient.dir}/META-INF" />
			<fileset dir="${framework.jvmclient.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.jvmclient.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${framework.classmeta.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.classmeta.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${framework.clientreflectorjvm.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.clientreflectorjvm.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>

		<condition property="framework.impl.base.dir" value="${framework.impl.jboss-hibernate.base.dir}">
			<equals arg1="${framework.jpa.impl}" arg2="jboss-hibernate" />
		</condition>
		<property name="framework.impl.base.dir" value="value" />
		<fail unless="framework.impl.base.dir">
		...
	You must set a valid JPA implementation value in local.ant.properties
		</fail>
		<delete file="${framework.dist.dir}/${ant.project.name}-entity-impl.jar" if:true="${alcina.delete-before-jars}" />

		<jar update="${alcina.update-jars}" destfile="${framework.dist.dir}/${ant.project.name}-entity-impl.jar">
			<metainf dir="${framework.impl.base.dir}/META-INF" />
			<fileset dir="${framework.impl.base.dir}/build">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.impl.base.dir}/src">
				<include name="cc/*.*" />
				<include name="**/*.java" />
				<include name="**/*.properties" />
				<exclude name="**/*.class" />
			</fileset>
		</jar>

		<delete file="${framework.dist.dir}/${ant.project.name}-servlet.jar" if:true="${alcina.delete-before-jars}" />

		<jar update="${alcina.update-jars}" destfile="${framework.dist.dir}/${ant.project.name}-servlet.jar">
			<metainf dir="${framework.servlet.base.dir}/META-INF" />
			<fileset dir="${framework.servlet.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.servlet.base.dir}/src">
				<include name="cc/**/*.*" />

				<include name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${framework.entity.build.dir}">
				<include name="${framework.remote.interface.package}" />
			</fileset>
		</jar>


	</target>

	<target name="javadoc" description="Make framework javadoc">
		<delete dir="${framework.javadoc.outputpath}">
		</delete>
		<mkdir dir="${framework.javadoc.outputpath}" />
		<javadoc source="1.5" destdir="${framework.javadoc.outputpath}" classpathref="framework.javadoc.classpath" sourcepathref="framework.javadoc.sourcepath" defaultexcludes="yes" packagenames="cc.*">

		</javadoc>
	</target>

</project>