<?xml version="1.0" encoding="utf-8"?>
<project name="alcina" basedir="." default="make-jars">
	<property file="local.ant.properties" />
	<property file="build.properties" />
	<fail unless="gwt.codestyle">
		...
		Please create a local.ant.properties file,
		template is local.ant.properties.template in this directory</fail>
	<import file="${alcina.home}/framework-paths.xml" />

	<target name="clean" description="Delete all generated files">
		<delete dir="${framework.entity.build.dir}" />
		<delete dir="${framework.servlet.build.dir}" />
		<delete dir="${framework.impl.jboss-hibernate.build.dir}" />
		<delete dir="${framework.dist.dir}" />
		<delete dir="${extras.collections.build.dir}" />
	</target>
	<target name="compile" description="Compiles all J2SE modules">
		<mkdir dir="${framework.entity.build.dir}" />
		<javac debug="on" srcdir="${framework.entity.src.dirs}" destdir="${framework.entity.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${framework.impl.jboss-hibernate.build.dir}" />
		<javac debug="on" srcdir="${framework.impl.jboss-hibernate.src.dirs}" destdir="${framework.impl.jboss-hibernate.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<path refid="framework.impl.jboss-hibernate.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${framework.servlet.build.dir}" />
		<javac debug="on" srcdir="${framework.servlet.src.dirs}" destdir="${framework.servlet.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<path refid="framework.servlet.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<mkdir dir="${extras.collections.build.dir}" />
		<javac debug="on" srcdir="${extras.collections.src.dir}" destdir="${extras.collections.build.dir}">
			<classpath>
				<path refid="framework.common.lib.path" />
				<pathelement path="${framework.entity.build.dir}" />
			</classpath>
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
	</target>

	<target name="make-jars" description="Make entity, entity-impl, servlet and extras jars " depends="compile">
		<mkdir dir="${framework.dist.dir}" />
		<delete file="${framework.dist.dir}/${ant.project.name}-entity.jar" />
		<copy todir="${framework.entity.build.dir}">
			<fileset dir="${framework.entity.base.dir}/src">
				<include name="au/**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
		</copy>
		<jar destfile="${framework.dist.dir}/${ant.project.name}-entity.jar">
			<metainf dir="${framework.entity.base.dir}/META-INF" />
			<fileset dir="${framework.entity.build.dir}">
				<include name="**/*.*" />
				<!-- put in server (servlet/war) jar due to GWT/RPC classloader issues -->
				<exclude name="${framework.remote.interface.class}" />
				<exclude name="${framework.remote.asyncinterface.class}" />
			</fileset>

			<!-- give the server handy access to stylesheets for print, static serving etc -->
			<fileset dir="${framework.gwt.src.dir}">
				<include name="**/*.css" />
			</fileset>
		</jar>
		<jar destfile="${framework.dist.dir}/${ant.project.name}-extras-collections.jar">
			<fileset dir="${extras.collections.build.dir}">
				<include name="**/*.*" />
			</fileset>
		</jar>

		<condition property="framework.impl.base.dir" value="${framework.impl.jboss-hibernate.base.dir}">
			<equals arg1="${framework.jpa.impl}" arg2="jboss-hibernate" />
		</condition>
		<property name="framework.impl.base.dir" value="value" />
		<fail unless="framework.impl.base.dir">
		...
	You must set a valid JPA implementation value in local.ant.properties
		</fail>

		<delete file="${framework.dist.dir}/${ant.project.name}-entity-impl.jar" />
		<copy todir="${framework.impl.base.dir}/build">
			<fileset dir="${framework.impl.base.dir}/src">
				<include name="au/**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
		</copy>
		<jar destfile="${framework.dist.dir}/${ant.project.name}-entity-impl.jar">
			<metainf dir="${framework.impl.base.dir}/META-INF" />
			<fileset dir="${framework.impl.base.dir}/build">
				<include name="**/*.*" />
			</fileset>
		</jar>

		<delete file="${framework.dist.dir}/${ant.project.name}-servlet.jar" />
		<copy todir="${framework.servlet.build.dir}">
			<fileset dir="${framework.servlet.base.dir}/src">
				<include name="cc/**/*.*" />

				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
		</copy>
		<jar destfile="${framework.dist.dir}/${ant.project.name}-servlet.jar">
			<metainf dir="${framework.servlet.base.dir}/META-INF" />
			<fileset dir="${framework.servlet.build.dir}">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="${framework.entity.build.dir}">
				<include name="${framework.remote.interface.class}" />
				<include name="${framework.remote.asyncinterface.class}" />
			</fileset>
		</jar>


	</target>

	<target name="javadoc" description="Make framework javadoc">
		<delete dir="${framework.javadoc.outputpath}">
		</delete>
		<mkdir dir="${framework.javadoc.outputpath}" />
		<javadoc source="1.5" destdir="${framework.javadoc.outputpath}" classpathref="framework.gwt.classpath" sourcepathref="framework.javadoc.sourcepath" defaultexcludes="yes" packagenames="cc.*">

		</javadoc>
	</target>

</project>