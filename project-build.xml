<?xml version="1.0" encoding="utf-8"?>
<project name="project-build" basedir="." default="make-jars" xmlns:if="ant:if">
	<property name="project.src.dir.2" value="${project.src.dir}" />
	<property name="project.src.dir.3" value="${project.src.dir.2}" />
	<property name="project.src.dir.4" value="${project.src.dir.3}" />
	<property name="project.src.dir.5" value="${project.src.dir.4}" />
	<property name="project.src.dir.6" value="${project.src.dir.5}" />
	<property name="project.src.dir.7" value="${project.src.dir.6}" />
	<property name="project.src.dir.8" value="${project.src.dir.7}" />
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${framework.lib.dir}/entity/ant-contrib.jar" />
		</classpath>
	</taskdef>
	<!-- should never be called directly, used by projects based on alcina -->
	<fail unless="gwt.codestyle">
		...
		Please create a local.ant.properties file,
		template is local.ant.properties.template in appropriate (alcina or project/entity) directory</fail>
	<target name="clean" description="Delete all generated files">
		<mkdir dir="${project.build.dir}" />
		<mkdir dir="${project.dist.dir}" />
		<delete includeEmptyDirs="true">
			<fileset dir="${project.build.dir}" includes="**/*" defaultexcludes="no" />
		</delete>
		<if>
			<available file="${project.dist.dir}" type="dir" />
			<then>
				<delete includeEmptyDirs="true">
					<fileset dir="${project.dist.dir}" includes="**/*" defaultexcludes="no" />
				</delete>
			</then>
		</if>
		<if>
			<available file="${project.web-inf.classes.dir}" type="dir" />
			<then>
				<delete includeEmptyDirs="true">
					<fileset dir="${project.web-inf.classes.dir}" includes="**/*" defaultexcludes="no" />
				</delete>
			</then>
		</if>
	</target>
	<target name="clean-gwt">
		<delete dir="${project.gwt.build.dir}" />
	</target>
	<target name="build-dependencies">
		<!-- override in the top-level-project build script -->
	</target>
	<target name="compile-task" description="Compiles the ${project.module.description} module" depends="">
		<mkdir dir="${project.build.dir}" />
		<javac includeantruntime="false" debug="on" sourcepath="" destdir="${project.build.dir}" verbose="false">

			<src path="${project.src.dirs}" />
			<classpath>
				<path refid="project.classpath" />
			</classpath>
			<patternset refid="project.compile.filter.sources" />
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<!-- a hack, but then...maybe I don't understand Ant? -->
		<delete dir="${project.build.dir}/com/totsp" />
	</target>
	<target name="compile" description="Compiles the ${project.module.description} module" depends="build-dependencies,compile-task">
	</target>
	<target name="make-jars" description="Make ${project.module.description} jar" depends="compile,make-jars-task">
	</target>
	<target name="make-jars-task" description="Make ${project.module.description} jar" depends="">
		<mkdir dir="${project.dist.dir}" />
		<delete file="${project.dist.dir}/${ant.project.name}.jar" if:true="${alcina.delete-before-jars}" />
		<copy todir="${project.build.dir}" preservelastmodified="true">
			<fileset dir="${project.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.2}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.3}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.4}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.5}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.6}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.7}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.8}">
				<include name="**/*.*" />
				<exclude name="**/*.class" />
			</fileset>

		</copy>
		<jar update="${alcina.update-jars}" destfile="${project.dist.dir}/${ant.project.name}.jar" manifest="${project.meta-inf.dir}/MANIFEST.MF">
			<metainf dir="${project.meta-inf.dir}" />
			<fileset dir="${project.build.dir}">
				<include name="**/*.*" />
				<patternset refid="project.jar.filter.exclude" />
			</fileset>
		</jar>
	</target>
	<macrodef name="clean-dependency">
		<attribute name="home" />
		<sequential>
			<ant target="clean" dir="@{home}" inheritAll="false">
				<property file="@{home}/local.ant.properties" />
				<property file="@{home}/build.properties" />
			</ant>
		</sequential>
	</macrodef>
	<macrodef name="build-dependency">
		<attribute name="home" />
		<sequential>
			<ant target="make-jars" dir="@{home}" inheritAll="false">
				<property file="@{home}/local.ant.properties" />
				<property file="@{home}/build.properties" />
			</ant>
		</sequential>
	</macrodef>
</project>