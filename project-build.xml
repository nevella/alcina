<?xml version="1.0" encoding="utf-8"?>
<project name="project-build" basedir="." default="make-jars">
	<property name="project.src.dir.2" location="${project.src.dir}" />
	<property name="project.src.dir.3" location="${project.src.dir}" />
	<property name="project.src.dir.4" location="${project.src.dir}" />
	<!-- should never be called directly, used by projects based on alcina-->
	<fail unless="gwt.codestyle">
			...
			Please create a local.ant.properties file,
			template is local.ant.properties.template in appropriate (alcina or project/entity) directory</fail>
	<target name="clean" description="Delete all generated files">
		<delete dir="${project.build.dir}" />
		<delete dir="${project.dist.dir}" />
		<delete dir="${project.web-inf.classes.dir}" quiet="true" />
	</target>
	<target name="clean-gwt">
		<delete dir="${project.gwt.build.dir}" />
	</target>
	<target name="build-dependencies">
		<!-- override in the top-level-project build script -->
	</target>
	<target name="compile" description="Compiles the ${project.module.description} module" depends="build-dependencies">
		<mkdir dir="${project.build.dir}" />
		<javac includeantruntime="false" debug="on" sourcepath="" destdir="${project.build.dir}">

			<src path="${project.src.dirs}" />
			<classpath>
				<path refid="project.classpath" />
			</classpath>
			<patternset refid="project.compile.filter.sources" />
			<compilerarg value="${alcina.compiler.args}" />
		</javac>
		<!-- a hack, but then...maybe I don't understand Ant? -->
		<delete dir="${project.build.dir}/com/totsp" />
	</target>

	<target name="make-jars" description="Make ${project.module.description} jar" depends="compile">
		<mkdir dir="${project.dist.dir}" />
		<delete file="${project.dist.dir}/${ant.project.name}.jar" />
		<copy todir="${project.build.dir}">
			<fileset dir="${project.src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.2}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.3}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
			<fileset dir="${project.src.dir.4}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="**/*.class" />
			</fileset>
		</copy>
		<jar destfile="${project.dist.dir}/${ant.project.name}.jar" manifest="${project.meta-inf.dir}/MANIFEST.MF">
			<metainf dir="${project.meta-inf.dir}" />
			<fileset dir="${project.build.dir}">
				<include name="**/*.*" />
				<patternset refid="project.jar.filter.exclude" />
			</fileset>
		</jar>
	</target>
	<macrodef name="clean-dependency">
		<attribute name="home" />
		<sequential>
			<ant target="clean" dir="@{home}" inheritAll="false">
				<property file="@{home}/local.ant.properties" />
				<property file="@{home}/build.properties" />
			</ant>
		</sequential>
	</macrodef>
	<macrodef name="build-dependency">
		<attribute name="home" />
		<sequential>
			<ant target="make-jars" dir="@{home}" inheritAll="false">
				<property file="@{home}/local.ant.properties" />
				<property file="@{home}/build.properties" />
			</ant>
		</sequential>
	</macrodef>
</project>